// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// 이 파일의 Force Formatting 지원은 VSCode-Prisma 플러그인 을 통해 도움을 받는다.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // "postgresql"
  url      = "file:./dev.db" // env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())

  Item  Item[]
  Token Token[]
}

model Token {
  id              Int      @id @default(autoincrement())
  rotationCounter Int      @default(1)
  createdAt       DateTime @default(now())
  blocked         Boolean  @default(false)

  User            User     @relation(fields: [userId], references: [id])
  userId          Int
}

model Item {
  id        Int       @id @default(autoincrement())
  title     String
  body      String
  link      String?
  thumbnail String?
  tags      Tag[]
  itemsTags ItemsTags[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User       User @relation(fields: [userId], references: [id])
  userId     Int
  SiteInfo   SiteInfo? @relation(fields: [siteInfoId], references: [id])
  siteInfoId Int?
}

model SiteInfo {
  id      Int     @id @default(autoincrement())
  name    String
  favicon String?
  domain  String  @unique
  items Item[]
}

model Tag {
  id        Int         @id @default(autoincrement())
  name      String      @unique

  Item      Item?       @relation(fields: [itemId], references: [id])
  itemId    Int?
  itemsTags ItemsTags[]
}

model ItemsTags {
  Item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  Tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([itemId, tagId])
  @@index(tagId)
  @@index(itemId)
}

model TagRelation {
  id          Int @id @default(autoincrement())
  tagId       Int
  originTagId Int

  @@index(tagId)
  @@index(originTagId)
}

model ItemLike {
  id     Int @id @default(autoincrement())
  itemId Int
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([itemId, userId])
}
